/ #  Copyright (c) 2012-2021, CVP Schweiz. This file is part of
/ #  hitobito and licensed under the Affero General Public License version 3
/ #  or later. See the COPYING file at the top-level directory or at
/ #  https://github.com/hitobito/hitobito.

= standard_form(entry, url: [parent.group, parent, entry], data: { group: group_path(parent.group.layer_group)  }) do |f|
  = f.error_messages
  .controls
    %p.text
      = spinner
    = link_to([parent.group, parent, :subscriptions, format: :pdf], target: :_blank) do
      #valid_recipient_info_one{ style: 'display: none;' }
        = t(".recipient_info.without_households.valid.#{entry.type.underscore}.one", model_class: entry.model_name.human)
      #valid_recipient_info_other{ style: 'display: none;' }
        = t(".recipient_info.without_households.valid.#{entry.type.underscore}.other_html", model_class: entry.model_name.human)
      #invalid_recipient_info_one{ style: 'display: none;' }
        = t(".recipient_info.without_households.invalid.#{entry.type.underscore}.one", model_class: entry.model_name.human)
      #invalid_recipient_info_other{ style: 'display: none;' }
        = t(".recipient_info.without_households.invalid.#{entry.type.underscore}.other_html", model_class: entry.model_name.human)

      #valid_households_info_one{ style: 'display: none;' }
        = t(".recipient_info.households.valid.#{entry.type.underscore}.one", model_class: entry.model_name.human)
      #valid_households_info_other{ style: 'display: none;' }
        = t(".recipient_info.households.valid.#{entry.type.underscore}.other_html", model_class: entry.model_name.human)
      #invalid_households_info_one{ style: 'display: none;' }
        = t(".recipient_info.households.invalid.#{entry.type.underscore}.one", model_class: entry.model_name.human)
      #invalid_households_info_other{ style: 'display: none;' }
        = t(".recipient_info.households.invalid.#{entry.type.underscore}.other_html", model_class: entry.model_name.human)

  = f.hidden_field :type

  - if entry.text_message?
    = render 'messages/text_message/fields', f: f
  - elsif entry.invoice?
    = render 'messages/letter_with_invoice/fields', f: f
  - elsif entry.letter?
    = render 'messages/letter/fields', f: f

  %br
  = form_buttons(f, cancel_url: [parent.group, parent, :messages])
